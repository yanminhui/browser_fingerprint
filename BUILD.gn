# for Chromium
#
# referenced by:
# - //third_party/blink/renderer/core:core (public_deps)
#

config("config") {
  include_dirs = [ "." ]
}

component("fingerprint") {
  output_name = "browser_fingerprint"

  public_configs = [ ":config" ]  
  if (is_component_build) {
    if (is_win) {
      defines += [ "FINGERPRINT_BUILD_DLL" ]
    } else {
      configs -= [ "//build/config/gcc:symbol_visibility_hidden" ]
      configs += [ "//build/config/gcc:symbol_visibility_default" ]
    }
  }
  configs -= [ 
    "//build/config/compiler:no_exceptions",
    "//build/config/compiler:no_rtti",
  ]
  configs += [
    "//build/config/compiler:exceptions",
    "//build/config/compiler:rtti",
  ]

  sources = [
    "fingerprint/crypt/bcrypt.cc",
    "fingerprint/crypt/bcrypt.h",
    "fingerprint/crypt/blowfish.cc",
    "fingerprint/crypt/node_blf.h",
    "fingerprint/crypt/openbsd.h",
    "fingerprint/fingerprint_context.cc",
    "fingerprint/fingerprint_context.h",
    "fingerprint/internal/apply_float_noise.h",
    "fingerprint/internal/uniform_float_distribution.h",
    "fingerprint/internal/uniform_int_distribution.h",
    "fingerprint/internal/utility.cc",
    "fingerprint/internal/utility.h",
    "fingerprint/services/context.cc",
    "fingerprint/services/context.h",
    "fingerprint/services/path_service.cc",
    "fingerprint/services/path_service.h",
    "fingerprint/services/settings_service.cc",
    "fingerprint/services/settings_service.h",
    "fingerprint/services/use_service.h",
    "fingerprint/settings.cc",
    "fingerprint/settings.h",
    "fingerprint/settings_keys.h",
    "fingerprint/webgl_noise.h",
    "fingerprint/webgl_renderer.cc",
    "fingerprint/webgl_renderer.h",
    "fingerprint/utility.cc",
    "fingerprint/utility.h",
  ]
}
